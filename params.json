{"name":"YfRecyclerView","tagline":"a economic recycler view with header, footer,loading,error,load more,pull to refresh,etc...","body":"# YfRecyclerView\r\na economic recycler view with functions list below:\r\n\r\n1.add header view\r\n\r\n2.add footer view\r\n\r\n3.auto load more\r\n\r\n4.pull to refresh\r\n\r\n5.empty display\r\n\r\n6.loading display\r\n\r\n7.error display\r\n\r\n8.divider\r\n\r\n9.add recycler view inside recycler view demo\r\n\r\n## How To Use\r\n\r\n### first\r\n\r\ninclude libs in your build.gradle\r\n\r\nor see it in maven :https://bintray.com/yefengfreedom/maven/YfRecyclerView/view\r\n\r\n```Java\r\n   compile 'com.freedom.yefeng:yfrecyclerview:1.0.0'\r\n```\r\n\r\n\r\n\r\n### sencond\r\nnew a RecyclerViewAdapter in your activity,and override the method whitch you want to use, just like SampleActivity do...\r\n\r\n```Java\r\nmAdapter = new RecyclerViewAdapter(mData) {\r\n            @Override\r\n            public RecyclerView.ViewHolder onCreateDataViewHolder(ViewGroup parent) {\r\n                View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.adapter_item, parent, false);\r\n                return new SimpleViewHolder(view);\r\n            }\r\n\r\n            @Override\r\n            public void onBindDataViewHolder(RecyclerView.ViewHolder holder, int position) {\r\n                ((TextView) holder.itemView.findViewById(R.id.txt_adapter_item)).setText((String) mData.get(position) + \" page is \" + mCurrentPage);\r\n                holder.itemView.setTag(mData.get(position));\r\n            }\r\n\r\n            @Override\r\n            public RecyclerView.ViewHolder onCreateEmptyViewHolder(ViewGroup parent) {\r\n                View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.view_empty_material, parent, false);\r\n                return new SimpleViewHolder(view);\r\n            }\r\n\r\n            @Override\r\n            public RecyclerView.ViewHolder onCreateLoadingViewHolder(ViewGroup parent) {\r\n                View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.view_loading_material, parent, false);\r\n                return new SimpleViewHolder(view);\r\n            }\r\n        };\r\nmRecycler.setAdapter(mAdapter);\r\n```\r\n\r\n### how to use recycler view inside recycler view\r\n\r\nuse ExpansionLinearLayoutManager to replace LinearLayoutManager\r\n\r\n```Java\r\nExpansionLinearLayoutManager layoutManager = new ExpansionLinearLayoutManager(getApplicationContext(), LinearLayoutManager.VERTICAL, false);\r\nrecyclerView.setLayoutManager(layoutManager);\r\n```\r\n\r\n### change display mode(show loading data,show data,show empty,show error)\r\n\r\nshow data.if data is empty, empty view will display.\r\n\r\n```Java\r\nmAdapter.setData(mData);\r\n```\r\n\r\nshow loading\r\n\r\n```Java\r\nmAdapter.changeMode(RecyclerViewMode.MODE_LOADING);\r\n```\r\n\r\nshow error\r\n\r\n```Java\r\nmAdapter.changeMode(RecyclerViewMode.MODE_ERROR)\r\n```\r\n\r\n### add header or footer\r\n\r\noverride onCreateHeaderViewHolder and onBindHeaderViewHolder or onCreateFooterViewHolder and onBindFooterViewHolder method\r\n\r\n```Java\r\n            @Override\r\n            public RecyclerView.ViewHolder onCreateHeaderViewHolder(ViewGroup parent) {\r\n                View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.view_header1, parent, false);\r\n                return new SimpleViewHolder(view);\r\n            }\r\n\r\n            @Override\r\n            public void onBindHeaderViewHolder(RecyclerView.ViewHolder holder, int position) {\r\n                ((TextView) holder.itemView.findViewById(R.id.tv_header)).setText(mAdapter.getHeaders().get(position).toString());\r\n                holder.itemView.setTag(mAdapter.getHeaders().get(position).toString());\r\n            }\r\n\r\n            @Override\r\n            public RecyclerView.ViewHolder onCreateFooterViewHolder(ViewGroup parent) {\r\n                View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.view_footer1, parent, false);\r\n                return new SimpleViewHolder(view);\r\n            }\r\n\r\n            @Override\r\n            public void onBindFooterViewHolder(RecyclerView.ViewHolder holder, int position) {\r\n                ((TextView) holder.itemView.findViewById(R.id.tv_footer)).setText(mAdapter.getFooters().get(position).toString());\r\n                holder.itemView.setTag(mAdapter.getFooters().get(position).toString());\r\n            }\r\n```\r\n\r\ncall adapter's addHeader or addFooter method\r\n \r\n!!! make sure your adapter is in RecyclerViewMode.MODE_DATA\r\n\r\n```Java\r\n mAdapter.addHeader(\"header 1\");\r\n mAdapter.removeHeader(header);\r\n mAdapter.addFooter(\"footer 1\");\r\n mAdapter.removeFooter(footer);\r\n```\r\n\r\n\r\n![alt tag](https://github.com/yefengfreedom/RecyclerViewWithHeaderFooterLoadingEmptyViewErrorView/blob/master/preview/0.png)\r\n![alt tag](https://github.com/yefengfreedom/RecyclerViewWithHeaderFooterLoadingEmptyViewErrorView/blob/master/preview/6.png)\r\n![alt tag](https://github.com/yefengfreedom/RecyclerViewWithHeaderFooterLoadingEmptyViewErrorView/blob/master/preview/1.png)\r\n![alt tag](https://github.com/yefengfreedom/RecyclerViewWithHeaderFooterLoadingEmptyViewErrorView/blob/master/preview/2.png)\r\n![alt tag](https://github.com/yefengfreedom/RecyclerViewWithHeaderFooterLoadingEmptyViewErrorView/blob/master/preview/2.5.png)\r\n![alt tag](https://github.com/yefengfreedom/RecyclerViewWithHeaderFooterLoadingEmptyViewErrorView/blob/master/preview/3.png)\r\n![alt tag](https://github.com/yefengfreedom/RecyclerViewWithHeaderFooterLoadingEmptyViewErrorView/blob/master/preview/4.png)\r\n![alt tag](https://github.com/yefengfreedom/RecyclerViewWithHeaderFooterLoadingEmptyViewErrorView/blob/master/preview/5.png)\r\n\r\n## Change Log\r\n#### 15-7-25  add auto load more method.  add list divider\r\n\r\n#### 15-7-28  add recycler view inside recycler view demo\r\n\r\n#### 15-7-30  upload to maven center\r\n\r\n#### 15-8-5   add recycler view adapter demo\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}